##Unit 1 - Lesson 1


#Exercise 1. Probability of cyan - generalized
#In the edX exercises for this section, we calculated some probabilities by hand. Now we'll calculate those probabilities using R.
#One ball will be drawn at random from a box containing: 3 cyan balls, 5 magenta balls, and 7 yellow balls.
#What is the probability that the ball will be cyan?

cyan <- 3
magenta <- 5
yellow <- 7

#have a number variable for total
total <- cyan + magenta + yellow

# Assign a variable `p` as the probability of choosing a cyan ball from the box
p <- cyan / total

# Print the variable `p` to the console
p




#Exercise 2. Probability of not cyan - generalized
#We defined the variable p as the probability of choosing a cyan ball from a box containing: 3 cyan balls, 5 magenta balls, and 7 yellow balls.
#What is the probability that the ball you draw from the box will NOT be cyan?
# `p` is defined as the probability of choosing a cyan ball from a box containing: 3 cyan balls, 5 magenta balls, and 7 yellow balls.
# Using variable `p`, calculate the probability of choosing any ball that is not cyan from the box

#declare variables c for cyan, m for magenta, y for yellow, t for total
c <- 3
m <- 5
y <- 7
t <- c + m + y

p <- (t - c) / t
p 




#Exercise 3. Sampling without replacement - generalized
#Instead of taking just one draw, consider taking two draws. You take the second draw without returning the first draw to the box. 
#We call this sampling without replacement.
#What is the probability that the first draw is cyan and that the second draw is not cyan?

cyan <- 3
magenta <- 5
yellow <- 7

#declare a total variable
total <- cyan + magenta + yellow

# The variable `p_1` is the probability of choosing a cyan ball from the box on the first draw.
p_1 <- cyan / total

# Assign a variable `p_2` as the probability of not choosing a cyan ball on the second draw without replacement.

p_2 <- (magenta + yellow) / (total - 1)

# Calculate the probability that the first draw is cyan and the second draw is not cyan using `p_1` and `p_2`.
p <- p_1 * p_2

#print p
p




#Exercise 4. Sampling with replacement - generalized
#Now repeat the experiment, but this time, after taking the first draw and recording the color, return it back to the box 
#and shake the box. We call this sampling with replacement.
#What is the probability that the first draw is cyan and that the second draw is not cyan?

cyan <- 3
magenta <- 5
yellow <- 7

total <- cyan + magenta + yellow
# The variable 'p_1' is the probability of choosing a cyan ball from the box on the first draw.
p_1 <- cyan / total

# Assign a variable 'p_2' as the probability of not choosing a cyan ball on the second draw with replacement.
p_2 <- (total - cyan) / total

# Calculate the probability that the first draw is cyan and the second draw is not cyan using `p_1` and `p_2`.
p <- p_1 * p_2

p




_______________________________________________________________________________________________________________________________________________________________________________
##Unit 1 - Lesson 2


#Exercise 1. Independence
#Imagine you draw two balls from a box containing colored balls. You either replace the first ball before you draw the second 
#or you leave the first ball out of the box when you draw the second ball.
#Remember that two events A and B are independent if Pr(A and B) = Pr(A)Pr(B).
#    Q:  Under which situation are the two draws independent of one another?

#    A:  You do replace the first ball before drawing the next.




#Exercise 2. Sampling with replacement
#Say youâ€™ve drawn 5 balls from the a box that has 3 cyan balls, 5 magenta balls, and 7 yellow balls, with replacement, and all have been yellow.
#What is the probability that the next one is yellow?

cyan <- 3
magenta <- 5
yellow <- 7

total <- cyan + magenta + yellow
# Assign the variable 'p_yellow' as the probability that a yellow ball is drawn from the box.
p_yellow = (yellow / total)

# Using the variable 'p_yellow', calculate the probability of drawing a yellow ball on the sixth draw. Print this value to the console.
p_yellow




#Exercise 3. Rolling a die
#If you roll a 6-sided die once, what is the probability of not seeing a 6? If you roll a 6-sided die six times, what is the probability 
#of not seeing a 6 on any of those rolls?

# Assign the variable 'p_no6' as the probability of not seeing a 6 on a single roll.
p_no6 = 5/6

# Calculate the probability of not seeing a 6 on six rolls using `p_no6`. Print your result to the console: do not assign it to a variable.
p_no6 ^ 6

p_no6




#Exercise 4. Probability the Celtics win a game
#Two teams, say the Celtics and the Cavs, are playing a seven game series. The Cavs are a better team and have a 60% chance of winning each game.
#What is the probability that the Celtics win at least one game? Remember that the Celtics must win one of the first four games, or the series will be over!

# Assign the variable `p_cavs_win4` as the probability that the Cavs will win the first four games of the series.
p_cavs_win4 = 0.6 ^ 4

# Using the variable `p_cavs_win4`, calculate the probability that the Celtics win at least one game in the first four games of the series.
(1 - p_cavs_win4)




#Exercise 5. Monte Carlo simulation for Celtics winning a game
#Create a Monte Carlo simulation to confirm your answer to the previous problem by estimating how frequently the Celtics win at least 1 of 4 games. 
#Use B <- 10000 simulations.
#The provided sample code simulates a single series of four random games, simulated_games.




_______________________________________________________________________________________________________________________________________________________________________________
##Unit 2 - Lesson 3


#Exercise 1. The Cavs and the Warriors
#Two teams, say the Cavs and the Warriors, are playing a seven game championship series. The first to win four games 
#wins the series. The teams are equally good, so they each have a 50-50 chance of winning each game.

#If the Cavs lose the first game, what is the probability that they win the series?

# Assign a variable 'n' as the number of remaining games.
n <- 6

# Assign a variable `outcomes` as a vector of possible game outcomes, where 0 indicates a loss and 1 indicates a win for the Cavs.
outcomes <- c(0,1)

# Assign a variable `l` to a list of all possible outcomes in all remaining games. Use the `rep` function on `list(outcomes)` to create list of length `n`.
l <- rep(list(outcomes), n)

# Create a data frame named 'possibilities' that contains all combinations of possible outcomes for the remaining games.
possibilities <- expand.grid(l)

# Create a vector named 'results' that indicates whether each row in the data frame 'possibilities' contains enough wins for the Cavs to win the series.
results <- rowSums(possibilities) >= 4

# Calculate the proportion of 'results' in which the Cavs win the series. Print the outcome to the console.
mean(results)




#Exercise 2. The Cavs and the Warriors - Monte Carlo
#Confirm the results of the previous question with a Monte Carlo simulation to estimate the probability of the Cavs 
#winning the series after losing the first game.

# The variable `B` specifies the number of times we want the simulation to run. Let's run the Monte Carlo simulation 10,000 times.
B <- 10000

# Use the `set.seed` function to make sure your answer matches the expected result after random sampling.
set.seed(1)

# Create an object called `results` that replicates for `B` iterations a simulated series and determines whether that series contains at least four wins for the Cavs.
results <- replicate (B, 
    {cavs_win <- sample(c(0,1), 6, replace = TRUE )
    sum(cavs_win) >= 4
})

# Calculate the frequency out of `B` iterations that the Cavs won at least four games in the remainder of the series. Print your answer to the console.
mean(results)




