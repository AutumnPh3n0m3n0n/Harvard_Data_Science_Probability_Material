#Lesson 1: Question 1 - Distribution of female heights part 1
#Assume the distribution of female heights is approximated by a normal distribution with a mean of 64 inches and a standard deviation of 3 inches. If we pick 
#a female at random, what is the probability that she is 5 feet or shorter?

# Assign a variable 'female_avg' as the average female height.
female_avg <- 64

# Assign a variable 'female_sd' as the standard deviation for female heights.
female_sd <- 3

# Using variables 'female_avg' and 'female_sd', calculate the probability that a randomly selected female is shorter than 5 feet. Print this value to the console.

pnorm(60, female_avg, female_sd)




#Lesson 1: Question 2 - Distribution of female heights part 2
Assume the distribution of female heights is approximated by a normal distribution with a mean of 64 inches and a standard deviation of 3 inches. If we pick 
#a female at random, what is the probability that she is 6 feet or taller?


# Assign a variable 'female_avg' as the average female height.
female_avg <- 64

# Assign a variable 'female_sd' as the standard deviation for female heights.
female_sd <- 3

# Using variables 'female_avg' and 'female_sd', calculate the probability that a randomly selected female is 6 feet or taller. Print this value to the console.

1 - pnorm(72, female_avg, female_sd)




#Lesson 1: Question 3 - Distribution of female heights part 3
#Assume the distribution of female heights is approximated by a normal distribution with a mean of 64 inches and a standard deviation of 3 inches. If we pick a 
#female at random, what is the probability that she is between 61 and 67 inches?

# Assign a variable 'female_avg' as the average female height.
female_avg <- 64

# Assign a variable 'female_sd' as the standard deviation for female heights.
female_sd <- 3

# Using variables 'female_avg' and 'female_sd', calculate the probability that a randomly selected female is between the desired height range. Print this value to the console.

#Use pnorm to define the probability that a randomly chosen woman will be shorter than 67 inches.
female_upper_bound <- pnorm(67, female_avg, female_sd)
female_upper_bound
#Subtract the probability that a randomly chosen will be shorter than 61 inches.
female_lower_bound <- female_upper_bound - pnorm(61, female_avg, female_sd)
female_lower_bound




#Lesson 1: Question 4 - Distribution of female heights part 4
#Repeat the previous exercise, but convert everything to centimeters. That is, multiply every height, including the standard deviation, by 2.54. What is the answer now?

# Assign a variable 'female_avg' as the average female height. Convert this value to centimeters.
female_avg <- 64*2.54

# Assign a variable 'female_sd' as the standard deviation for female heights. Convert this value to centimeters.
female_sd <- 3*2.54

# Using variables 'female_avg' and 'female_sd', calculate the probability that a randomly selected female is between the desired height range. Print this value to the console.

female_upper_bound <- 67*2.54
female_lower_bound <- 61*2.54

pnorm(female_upper_bound, female_avg, female_sd) - pnorm(female_lower_bound, female_avg, female_sd)




#Lesson 1: Question 5 - Probability of 1 SD from average
#Compute the probability that the height of a randomly chosen female is within 1 SD from the average height.

# Assign a variable 'female_avg' as the average female height.
female_avg <- 64

# Assign a variable 'female_sd' as the standard deviation for female heights.
female_sd <- 3

# To a variable named 'taller', assign the value of a height that is one SD taller than average.f
taller <- female_avg + female_sd

# To a variable named 'shorter', assign the value of a height that is one SD shorter than average.
shorter <- female_avg - female_sd

# Calculate the probability that a randomly selected female is between the desired height range. Print this value to the console.
pnorm(taller, female_avg, female_sd) - pnorm(shorter, female_avg, female_sd)




#Lesson 1: Question 6. Distribution of male heights
#Imagine the distribution of male adults is approximately normal with an average of 69 inches and a standard deviation of 3 inches. How tall is a male in the 99th percentile?

# Assign a variable 'male_avg' as the average male height.
male_avg <- 69

# Assign a variable 'male_sd' as the standard deviation for male heights.
male_sd <- 3

# Determine the height of a man in the 99th percentile of the distribution.
qnorm(.99, mean = male_avg, sd = male_sd)




#Lesson 1: Question 7. Distribution of IQ scores
#The distribution of IQ scores is approximately normally distributed. The average is 100 and the standard deviation is 15. Suppose you want to know the distribution of the 
#person with the highest IQ in your school district, where 10,000 people are born each year.
#Generate 10,000 IQ scores 1,000 times using a Monte Carlo simulation. Make a histogram of the highest IQ scores.

# The variable `B` specifies the number of times we want the simulation to run.
B <- 1000

# Use the `set.seed` function to make sure your answer matches the expected result after random number generation.
set.seed(1)

# Create an object called `highestIQ` that contains the highest IQ score from each random distribution of 10,000 people.

highestIQ <- replicate(B, 
    {intelligence_quotient <- rnorm(10000, 15)
    max(intelligence_quotient)
    })

# Make a histogram of the highest IQ scores.
hist(highestIQ)




________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
#Lesson 2: Question 1 - ACT Scores part 1

#First we'll simulate an ACT test score dataset and answer some questions about it.

#Set the seed to 16, then use rnorm() to generate a normal distribution of 10000 tests with a mean of 20.9 and standard deviation of 5.7. 
#Save these values as act_scores. You'll be using this dataset throughout these four multi-part questions.

#IMPORTANT NOTE! If you use R 3.6 or later, you will need to use the command format set.seed(x, sample.kind = "Rounding") instead of set.seed(x). 
#Your R version will be printed at the top of the Console window when you start RStudio.

set.seed(16, sample.kind = "Rounding")
act_scores <- rnorm(10000, 20.9, 5.7)

#Question 1a: What is the mean of act_scores?
Work: mean(act_scores)
Answer: 20.84


#Question 1b: What is the standard devation of act_scores?
Work: sd(act_scores)
Answer: 5.68


#Question 1c: A perfect score is 36 or greater (the maximum reported score is 36).
#In act_scores, how many perfect scores are there out of 10,000 simulated tests?
Work: sum(act_scores >= 36)
Answer: 41


#Question 1d: In act_scores, what is the probability of an ACT score greater than 30?
Work: sum(act_scores > 30) / [total number of test takers] = 527 / 10000
Answer: 0.0527


#Question 1e: In act_scores, what is the probability of an ACT score less than or equal to 10?
Work: sum(act_scores <= 10) / [total number of test takers] = 282 / 10000
Answer: 0.0282




#Question 2: Set x equal to the sequence of integers 1 to 36. Use dnorm to determine the value of the probability density function over x 
#given a mean of 20.9 and standard deviation of 5.7; save the result as f_x. Plot x against f_x.
#Which of the following plots is correct?

x <- seq(1, 36)
f_x <- dnorm(x, mean = 20.9, sd = 5.7)
plot(x, f_x)




#Question 3: Convert act_scores to Z-scores. Recall from Data Visualization (the second course in this series) that to standardize values 
#(convert values into Z-scores, that is, values distributed with a mean of 0 and standard deviation of 1), you must subtract the mean and 
#then divide by the standard deviation. Use the mean and standard deviation of act_scores, not the original values used to generate random 
#test scores.


#Question 3a: What is the probability of a Z-score greater than 2 (2 standard deviations above the mean)?
Work: z_scores <- (act_scores - mean(act_scores)) / sd(act_scores)
mean(z_scores > 2)
Answer: 0.0233


#Question 3b: What ACT score value corresponds to 2 standard deviations above the mean (Z = 2)?
Work: 2 * sd(act_scores) + mean(act_scores)
Answer: 32.19


#Question 3c: A Z-score of 2 corresponds roughly to the 97.5th percentile.
#Use qnorm() to determine the 97.5th percentile of normally distributed data with the mean and standard deviation observed in act_scores.
#What is the 97.5th percentile of act_scores?
Work: qnorm(.975, mean(act_scores), sd(act_scores))
Answer: 32.19




#Question 4: In this 4-part question, you will write a function to create a CDF for ACT scores.
#Write a function that takes a value and produces the probability of an ACT score less than or equal to that value (the CDF). Apply this 
#function to the range 1 to 36.


#Question 4a: What is the minimum integer score such that the probability of that score or lower is at least .95?
Work: ceiling(qnorm(0.95, mean(act_scores), sd(act_scores)))
Answer: 31


#Question 4b: Use qnorm() to determine the expected 95th percentile, the value for which the probability of receiving that score or lower is 
#0.95, given a mean score of 20.9 and standard deviation of 5.7.
Work: qnorm(0.95, 20.9, 5.7)
Answer: 30.275


#Question 4c: In what percentile is a score of 26?
#As discussed in the Data Visualization course, we can use quantile() to determine sample quantiles from the data.
#Make a vector containing the quantiles for p <- seq(0.01, 0.99, 0.01), the 1st through 99th percentiles of the act_scores data. Save these 
#as sample_quantiles.
Work: sample_quantiles <- seq(0.01, 0.99, 0.01)
quantile(act_scores, sample_quantiles)
Answer: 82


#Question 4d: Make a corresponding set of theoretical quantiles using qnorm() over the interval p <- seq(0.01, 0.99, 0.01) with mean 20.9 
#and standard deviation 5.7. Save these as theoretical_quantiles. Make a QQ-plot graphing sample_quantiles on the y-axis versus 
#theoretical_quantiles on the x-axis.
Work: theoretical_quantiles <- qnorm(sample_quantiles, 20.9, 5.7)
qqplot(y=sample_quantiles, x=theoretical_quantiles)


